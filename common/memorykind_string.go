// Code generated by "stringer -type=MemoryKind -trimprefix=MemoryKind"; DO NOT EDIT.

package common

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MemoryKindUnknown-0]
	_ = x[MemoryKindAddressValue-1]
	_ = x[MemoryKindStringValue-2]
	_ = x[MemoryKindCharacterValue-3]
	_ = x[MemoryKindNumberValue-4]
	_ = x[MemoryKindArrayValueBase-5]
	_ = x[MemoryKindDictionaryValueBase-6]
	_ = x[MemoryKindCompositeValueBase-7]
	_ = x[MemoryKindSimpleCompositeValueBase-8]
	_ = x[MemoryKindOptionalValue-9]
	_ = x[MemoryKindTypeValue-10]
	_ = x[MemoryKindPathValue-11]
	_ = x[MemoryKindCapabilityValue-12]
	_ = x[MemoryKindStorageReferenceValue-13]
	_ = x[MemoryKindEphemeralReferenceValue-14]
	_ = x[MemoryKindInterpretedFunctionValue-15]
	_ = x[MemoryKindHostFunctionValue-16]
	_ = x[MemoryKindBoundFunctionValue-17]
	_ = x[MemoryKindBigInt-18]
	_ = x[MemoryKindSimpleCompositeValue-19]
	_ = x[MemoryKindPublishedValue-20]
	_ = x[MemoryKindStorageCapabilityControllerValue-21]
	_ = x[MemoryKindAccountCapabilityControllerValue-22]
	_ = x[MemoryKindAtreeArrayDataSlab-23]
	_ = x[MemoryKindAtreeArrayMetaDataSlab-24]
	_ = x[MemoryKindAtreeArrayElementOverhead-25]
	_ = x[MemoryKindAtreeMapDataSlab-26]
	_ = x[MemoryKindAtreeMapMetaDataSlab-27]
	_ = x[MemoryKindAtreeMapElementOverhead-28]
	_ = x[MemoryKindAtreeMapPreAllocatedElement-29]
	_ = x[MemoryKindAtreeEncodedSlab-30]
	_ = x[MemoryKindPrimitiveStaticType-31]
	_ = x[MemoryKindCompositeStaticType-32]
	_ = x[MemoryKindInterfaceStaticType-33]
	_ = x[MemoryKindVariableSizedStaticType-34]
	_ = x[MemoryKindConstantSizedStaticType-35]
	_ = x[MemoryKindDictionaryStaticType-36]
	_ = x[MemoryKindInclusiveRangeStaticType-37]
	_ = x[MemoryKindOptionalStaticType-38]
	_ = x[MemoryKindIntersectionStaticType-39]
	_ = x[MemoryKindEntitlementSetStaticAccess-40]
	_ = x[MemoryKindEntitlementMapStaticAccess-41]
	_ = x[MemoryKindReferenceStaticType-42]
	_ = x[MemoryKindCapabilityStaticType-43]
	_ = x[MemoryKindFunctionStaticType-44]
	_ = x[MemoryKindTransactionStaticType-45]
	_ = x[MemoryKindCadenceVoidValue-46]
	_ = x[MemoryKindCadenceOptionalValue-47]
	_ = x[MemoryKindCadenceBoolValue-48]
	_ = x[MemoryKindCadenceStringValue-49]
	_ = x[MemoryKindCadenceCharacterValue-50]
	_ = x[MemoryKindCadenceAddressValue-51]
	_ = x[MemoryKindCadenceIntValue-52]
	_ = x[MemoryKindCadenceNumberValue-53]
	_ = x[MemoryKindCadenceArrayValueBase-54]
	_ = x[MemoryKindCadenceArrayValueLength-55]
	_ = x[MemoryKindCadenceDictionaryValue-56]
	_ = x[MemoryKindCadenceInclusiveRangeValue-57]
	_ = x[MemoryKindCadenceKeyValuePair-58]
	_ = x[MemoryKindCadenceStructValueBase-59]
	_ = x[MemoryKindCadenceStructValueSize-60]
	_ = x[MemoryKindCadenceResourceValueBase-61]
	_ = x[MemoryKindCadenceAttachmentValueBase-62]
	_ = x[MemoryKindCadenceResourceValueSize-63]
	_ = x[MemoryKindCadenceAttachmentValueSize-64]
	_ = x[MemoryKindCadenceEventValueBase-65]
	_ = x[MemoryKindCadenceEventValueSize-66]
	_ = x[MemoryKindCadenceContractValueBase-67]
	_ = x[MemoryKindCadenceContractValueSize-68]
	_ = x[MemoryKindCadenceEnumValueBase-69]
	_ = x[MemoryKindCadenceEnumValueSize-70]
	_ = x[MemoryKindCadencePathValue-71]
	_ = x[MemoryKindCadenceTypeValue-72]
	_ = x[MemoryKindCadenceCapabilityValue-73]
	_ = x[MemoryKindCadenceDeprecatedPathCapabilityType-74]
	_ = x[MemoryKindCadenceFunctionValue-75]
	_ = x[MemoryKindCadenceOptionalType-76]
	_ = x[MemoryKindCadenceDeprecatedRestrictedType-77]
	_ = x[MemoryKindCadenceVariableSizedArrayType-78]
	_ = x[MemoryKindCadenceConstantSizedArrayType-79]
	_ = x[MemoryKindCadenceDictionaryType-80]
	_ = x[MemoryKindCadenceInclusiveRangeType-81]
	_ = x[MemoryKindCadenceField-82]
	_ = x[MemoryKindCadenceParameter-83]
	_ = x[MemoryKindCadenceTypeParameter-84]
	_ = x[MemoryKindCadenceStructType-85]
	_ = x[MemoryKindCadenceResourceType-86]
	_ = x[MemoryKindCadenceAttachmentType-87]
	_ = x[MemoryKindCadenceEventType-88]
	_ = x[MemoryKindCadenceContractType-89]
	_ = x[MemoryKindCadenceStructInterfaceType-90]
	_ = x[MemoryKindCadenceResourceInterfaceType-91]
	_ = x[MemoryKindCadenceContractInterfaceType-92]
	_ = x[MemoryKindCadenceFunctionType-93]
	_ = x[MemoryKindCadenceEntitlementSetAccess-94]
	_ = x[MemoryKindCadenceEntitlementMapAccess-95]
	_ = x[MemoryKindCadenceReferenceType-96]
	_ = x[MemoryKindCadenceIntersectionType-97]
	_ = x[MemoryKindCadenceCapabilityType-98]
	_ = x[MemoryKindCadenceEnumType-99]
	_ = x[MemoryKindRawString-100]
	_ = x[MemoryKindAddressLocation-101]
	_ = x[MemoryKindBytes-102]
	_ = x[MemoryKindVariable-103]
	_ = x[MemoryKindContractVariable-104]
	_ = x[MemoryKindCompositeTypeInfo-105]
	_ = x[MemoryKindCompositeField-106]
	_ = x[MemoryKindInvocation-107]
	_ = x[MemoryKindStorageMap-108]
	_ = x[MemoryKindStorageKey-109]
	_ = x[MemoryKindTypeToken-110]
	_ = x[MemoryKindErrorToken-111]
	_ = x[MemoryKindSpaceToken-112]
	_ = x[MemoryKindProgram-113]
	_ = x[MemoryKindIdentifier-114]
	_ = x[MemoryKindArgument-115]
	_ = x[MemoryKindBlock-116]
	_ = x[MemoryKindFunctionBlock-117]
	_ = x[MemoryKindParameter-118]
	_ = x[MemoryKindParameterList-119]
	_ = x[MemoryKindTypeParameter-120]
	_ = x[MemoryKindTypeParameterList-121]
	_ = x[MemoryKindTransfer-122]
	_ = x[MemoryKindMembers-123]
	_ = x[MemoryKindTypeAnnotation-124]
	_ = x[MemoryKindDictionaryEntry-125]
	_ = x[MemoryKindSwitchCase-126]
	_ = x[MemoryKindFunctionDeclaration-127]
	_ = x[MemoryKindCompositeDeclaration-128]
	_ = x[MemoryKindAttachmentDeclaration-129]
	_ = x[MemoryKindInterfaceDeclaration-130]
	_ = x[MemoryKindEntitlementDeclaration-131]
	_ = x[MemoryKindEntitlementMappingElement-132]
	_ = x[MemoryKindEntitlementMappingDeclaration-133]
	_ = x[MemoryKindEnumCaseDeclaration-134]
	_ = x[MemoryKindFieldDeclaration-135]
	_ = x[MemoryKindTransactionDeclaration-136]
	_ = x[MemoryKindImportDeclaration-137]
	_ = x[MemoryKindVariableDeclaration-138]
	_ = x[MemoryKindSpecialFunctionDeclaration-139]
	_ = x[MemoryKindPragmaDeclaration-140]
	_ = x[MemoryKindAssignmentStatement-141]
	_ = x[MemoryKindBreakStatement-142]
	_ = x[MemoryKindContinueStatement-143]
	_ = x[MemoryKindEmitStatement-144]
	_ = x[MemoryKindExpressionStatement-145]
	_ = x[MemoryKindForStatement-146]
	_ = x[MemoryKindIfStatement-147]
	_ = x[MemoryKindReturnStatement-148]
	_ = x[MemoryKindSwapStatement-149]
	_ = x[MemoryKindSwitchStatement-150]
	_ = x[MemoryKindWhileStatement-151]
	_ = x[MemoryKindRemoveStatement-152]
	_ = x[MemoryKindBooleanExpression-153]
	_ = x[MemoryKindVoidExpression-154]
	_ = x[MemoryKindNilExpression-155]
	_ = x[MemoryKindStringExpression-156]
	_ = x[MemoryKindIntegerExpression-157]
	_ = x[MemoryKindFixedPointExpression-158]
	_ = x[MemoryKindArrayExpression-159]
	_ = x[MemoryKindStringTemplateExpression-160]
	_ = x[MemoryKindDictionaryExpression-161]
	_ = x[MemoryKindIdentifierExpression-162]
	_ = x[MemoryKindInvocationExpression-163]
	_ = x[MemoryKindMemberExpression-164]
	_ = x[MemoryKindIndexExpression-165]
	_ = x[MemoryKindConditionalExpression-166]
	_ = x[MemoryKindUnaryExpression-167]
	_ = x[MemoryKindBinaryExpression-168]
	_ = x[MemoryKindFunctionExpression-169]
	_ = x[MemoryKindCastingExpression-170]
	_ = x[MemoryKindCreateExpression-171]
	_ = x[MemoryKindDestroyExpression-172]
	_ = x[MemoryKindReferenceExpression-173]
	_ = x[MemoryKindForceExpression-174]
	_ = x[MemoryKindPathExpression-175]
	_ = x[MemoryKindAttachExpression-176]
	_ = x[MemoryKindConstantSizedType-177]
	_ = x[MemoryKindDictionaryType-178]
	_ = x[MemoryKindFunctionType-179]
	_ = x[MemoryKindInstantiationType-180]
	_ = x[MemoryKindNominalType-181]
	_ = x[MemoryKindOptionalType-182]
	_ = x[MemoryKindReferenceType-183]
	_ = x[MemoryKindIntersectionType-184]
	_ = x[MemoryKindVariableSizedType-185]
	_ = x[MemoryKindPosition-186]
	_ = x[MemoryKindRange-187]
	_ = x[MemoryKindElaboration-188]
	_ = x[MemoryKindActivation-189]
	_ = x[MemoryKindActivationEntries-190]
	_ = x[MemoryKindVariableSizedSemaType-191]
	_ = x[MemoryKindConstantSizedSemaType-192]
	_ = x[MemoryKindDictionarySemaType-193]
	_ = x[MemoryKindOptionalSemaType-194]
	_ = x[MemoryKindIntersectionSemaType-195]
	_ = x[MemoryKindReferenceSemaType-196]
	_ = x[MemoryKindEntitlementSemaType-197]
	_ = x[MemoryKindEntitlementMapSemaType-198]
	_ = x[MemoryKindEntitlementRelationSemaType-199]
	_ = x[MemoryKindCapabilitySemaType-200]
	_ = x[MemoryKindInclusiveRangeSemaType-201]
	_ = x[MemoryKindOrderedMap-202]
	_ = x[MemoryKindOrderedMapEntryList-203]
	_ = x[MemoryKindOrderedMapEntry-204]
	_ = x[MemoryKindGoSliceLength-205]
	_ = x[MemoryKindCompiler-206]
	_ = x[MemoryKindCompilerGlobal-207]
	_ = x[MemoryKindCompilerConstant-208]
	_ = x[MemoryKindLast-209]
}

const _MemoryKind_name = "UnknownAddressValueStringValueCharacterValueNumberValueArrayValueBaseDictionaryValueBaseCompositeValueBaseSimpleCompositeValueBaseOptionalValueTypeValuePathValueCapabilityValueStorageReferenceValueEphemeralReferenceValueInterpretedFunctionValueHostFunctionValueBoundFunctionValueBigIntSimpleCompositeValuePublishedValueStorageCapabilityControllerValueAccountCapabilityControllerValueAtreeArrayDataSlabAtreeArrayMetaDataSlabAtreeArrayElementOverheadAtreeMapDataSlabAtreeMapMetaDataSlabAtreeMapElementOverheadAtreeMapPreAllocatedElementAtreeEncodedSlabPrimitiveStaticTypeCompositeStaticTypeInterfaceStaticTypeVariableSizedStaticTypeConstantSizedStaticTypeDictionaryStaticTypeInclusiveRangeStaticTypeOptionalStaticTypeIntersectionStaticTypeEntitlementSetStaticAccessEntitlementMapStaticAccessReferenceStaticTypeCapabilityStaticTypeFunctionStaticTypeTransactionStaticTypeCadenceVoidValueCadenceOptionalValueCadenceBoolValueCadenceStringValueCadenceCharacterValueCadenceAddressValueCadenceIntValueCadenceNumberValueCadenceArrayValueBaseCadenceArrayValueLengthCadenceDictionaryValueCadenceInclusiveRangeValueCadenceKeyValuePairCadenceStructValueBaseCadenceStructValueSizeCadenceResourceValueBaseCadenceAttachmentValueBaseCadenceResourceValueSizeCadenceAttachmentValueSizeCadenceEventValueBaseCadenceEventValueSizeCadenceContractValueBaseCadenceContractValueSizeCadenceEnumValueBaseCadenceEnumValueSizeCadencePathValueCadenceTypeValueCadenceCapabilityValueCadenceDeprecatedPathCapabilityTypeCadenceFunctionValueCadenceOptionalTypeCadenceDeprecatedRestrictedTypeCadenceVariableSizedArrayTypeCadenceConstantSizedArrayTypeCadenceDictionaryTypeCadenceInclusiveRangeTypeCadenceFieldCadenceParameterCadenceTypeParameterCadenceStructTypeCadenceResourceTypeCadenceAttachmentTypeCadenceEventTypeCadenceContractTypeCadenceStructInterfaceTypeCadenceResourceInterfaceTypeCadenceContractInterfaceTypeCadenceFunctionTypeCadenceEntitlementSetAccessCadenceEntitlementMapAccessCadenceReferenceTypeCadenceIntersectionTypeCadenceCapabilityTypeCadenceEnumTypeRawStringAddressLocationBytesVariableContractVariableCompositeTypeInfoCompositeFieldInvocationStorageMapStorageKeyTypeTokenErrorTokenSpaceTokenProgramIdentifierArgumentBlockFunctionBlockParameterParameterListTypeParameterTypeParameterListTransferMembersTypeAnnotationDictionaryEntrySwitchCaseFunctionDeclarationCompositeDeclarationAttachmentDeclarationInterfaceDeclarationEntitlementDeclarationEntitlementMappingElementEntitlementMappingDeclarationEnumCaseDeclarationFieldDeclarationTransactionDeclarationImportDeclarationVariableDeclarationSpecialFunctionDeclarationPragmaDeclarationAssignmentStatementBreakStatementContinueStatementEmitStatementExpressionStatementForStatementIfStatementReturnStatementSwapStatementSwitchStatementWhileStatementRemoveStatementBooleanExpressionVoidExpressionNilExpressionStringExpressionIntegerExpressionFixedPointExpressionArrayExpressionStringTemplateExpressionDictionaryExpressionIdentifierExpressionInvocationExpressionMemberExpressionIndexExpressionConditionalExpressionUnaryExpressionBinaryExpressionFunctionExpressionCastingExpressionCreateExpressionDestroyExpressionReferenceExpressionForceExpressionPathExpressionAttachExpressionConstantSizedTypeDictionaryTypeFunctionTypeInstantiationTypeNominalTypeOptionalTypeReferenceTypeIntersectionTypeVariableSizedTypePositionRangeElaborationActivationActivationEntriesVariableSizedSemaTypeConstantSizedSemaTypeDictionarySemaTypeOptionalSemaTypeIntersectionSemaTypeReferenceSemaTypeEntitlementSemaTypeEntitlementMapSemaTypeEntitlementRelationSemaTypeCapabilitySemaTypeInclusiveRangeSemaTypeOrderedMapOrderedMapEntryListOrderedMapEntryGoSliceLengthCompilerCompilerGlobalCompilerConstantLast"

var _MemoryKind_index = [...]uint16{0, 7, 19, 30, 44, 55, 69, 88, 106, 130, 143, 152, 161, 176, 197, 220, 244, 261, 279, 285, 305, 319, 351, 383, 401, 423, 448, 464, 484, 507, 534, 550, 569, 588, 607, 630, 653, 673, 697, 715, 737, 763, 789, 808, 828, 846, 867, 883, 903, 919, 937, 958, 977, 992, 1010, 1031, 1054, 1076, 1102, 1121, 1143, 1165, 1189, 1215, 1239, 1265, 1286, 1307, 1331, 1355, 1375, 1395, 1411, 1427, 1449, 1484, 1504, 1523, 1554, 1583, 1612, 1633, 1658, 1670, 1686, 1706, 1723, 1742, 1763, 1779, 1798, 1824, 1852, 1880, 1899, 1926, 1953, 1973, 1996, 2017, 2032, 2041, 2056, 2061, 2069, 2085, 2102, 2116, 2126, 2136, 2146, 2155, 2165, 2175, 2182, 2192, 2200, 2205, 2218, 2227, 2240, 2253, 2270, 2278, 2285, 2299, 2314, 2324, 2343, 2363, 2384, 2404, 2426, 2451, 2480, 2499, 2515, 2537, 2554, 2573, 2599, 2616, 2635, 2649, 2666, 2679, 2698, 2710, 2721, 2736, 2749, 2764, 2778, 2793, 2810, 2824, 2837, 2853, 2870, 2890, 2905, 2929, 2949, 2969, 2989, 3005, 3020, 3041, 3056, 3072, 3090, 3107, 3123, 3140, 3159, 3174, 3188, 3204, 3221, 3235, 3247, 3264, 3275, 3287, 3300, 3316, 3333, 3341, 3346, 3357, 3367, 3384, 3405, 3426, 3444, 3460, 3480, 3497, 3516, 3538, 3565, 3583, 3605, 3615, 3634, 3649, 3662, 3670, 3684, 3700, 3704}

func (i MemoryKind) String() string {
	if i >= MemoryKind(len(_MemoryKind_index)-1) {
		return "MemoryKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _MemoryKind_name[_MemoryKind_index[i]:_MemoryKind_index[i+1]]
}
